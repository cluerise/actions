name: Review PR
description: Approve a pull request or request a review

inputs:
  token:
    description: GitHub token to use for the API call
    required: true
  trusted-user:
    description: Approve all pull requests from the trusted user
    required: true
  trusted-bot:
    description: Approve all pull requests from the trusted bot except for releases
    required: true
  reviewer:
    description: A user for requesting reviews
    required: true
  dependency-approved:
    description: A boolean whether the updated dependency should be approved
    required: true

runs:
  using: composite
  steps:
    - name: Set inputs
      env:
        token: ${{ inputs.token }}
        trusted-user: ${{ inputs.trusted-user }}
        trusted-bot: ${{ inputs.trusted-bot }}
        reviewer: ${{ inputs.reviewer }}
        dependency-approved: ${{ inputs.dependency-approved }}
      run: |
        {
          echo "INPUT_TOKEN=${{ env.token }}"
          echo "INPUT_TRUSTED_USER=${{ env.trusted-user }}"
          echo "INPUT_TRUSTED_BOT=${{ env.trusted-bot }}"
          echo "INPUT_REVIEWER=${{ env.reviewer }}"
          echo "INPUT_DEPENDENCY_APPROVED=${{ env.dependency-approved }}"
        } >> $GITHUB_ENV
      shell: bash

    - name: Approve
      if: >-
        (
          github.event.action == 'opened' ||
          github.event.action == 'synchronize' ||
          github.event.action == 'reopened'
        ) &&
        (
          github.event.pull_request.user.login == env.INPUT_TRUSTED_USER ||
          (
            github.event.pull_request.user.login == env.INPUT_TRUSTED_BOT &&
            (!startsWith(github.head_ref, 'deps-') || env.INPUT_DEPENDENCY_APPROVED == 'true') &&
            !startsWith(github.head_ref, 'release-')
          ) ||
          (
            github.event.pull_request.user.login == 'dependabot[bot]' &&
            env.INPUT_DEPENDENCY_APPROVED == 'true'
          )
        )
      uses: octokit/graphql-action@v2.3.2
      with:
        token: ${{ env.INPUT_TOKEN }}
        query: |
          mutation AddPullRequestReview($id: ID!) {
            addPullRequestReview(input: {pullRequestId: $id, event: APPROVE}) {
              clientMutationId
            }
          }
        id: ${{ github.event.pull_request.node_id }}

    - name: Get user for review
      id: get-user-id
      uses: octokit/graphql-action@v2.3.2
      with:
        token: ${{ env.INPUT_TOKEN }}
        query: |
          query GetUserId($login: String!) {
            user(login: $login) {
              id
            }
          }
        login: ${{ env.INPUT_REVIEWER }}

    - name: Request review
      if: >-
        (
          github.event.action == 'opened' ||
          github.event.action == 'synchronize' ||
          github.event.action == 'reopened'
        ) &&
        (
          (
            github.event.pull_request.user.login == env.INPUT_TRUSTED_BOT &&
            (
              (startsWith(github.head_ref, 'deps-') && env.INPUT_DEPENDENCY_APPROVED == 'false') ||
              startsWith(github.head_ref, 'release-')
            )
          ) ||
          (
            github.event.pull_request.user.login == 'dependabot[bot]' &&
            env.INPUT_DEPENDENCY_APPROVED == 'false'
          )
        )
      uses: octokit/graphql-action@v2.3.2
      with:
        token: ${{ env.INPUT_TOKEN }}
        query: |
          mutation RequestReviews($id: ID!, $user: ID!) {
            requestReviews(input: {pullRequestId: $id, userIds: [$user]}) {
              clientMutationId
            }
          }
        id: ${{ github.event.pull_request.node_id }}
        user: ${{ fromJSON(steps.get-user-id.outputs.data).user.id }}
