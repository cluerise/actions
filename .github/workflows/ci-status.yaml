name: CI status

on:
  workflow_call:
    inputs:
      app-id:
        type: string
        description: GitHub app ID
        required: false
    secrets:
      token:
        description: GitHub access token
        required: false
      app-private-key:
        description: GitHub app private key
        required: false

jobs:
  send-status:
    name: Send CI status
    runs-on: ubuntu-latest
    concurrency:
      group: ci-status-${{ github.event.workflow_run.head_sha }}
      cancel-in-progress: true
    env:
      CI_STATE: pending
      CI_DESCRIPTION: Waiting
      INPUT_APP_ID: ${{ inputs.app-id }}
      SECRET_TOKEN: ${{ secrets.token }}
      SECRET_APP_PRIVATE_KEY: ${{ secrets.app-private-key }}

    steps:
      - name: Check required secrets
        if: env.SECRET_TOKEN == null && (env.INPUT_APP_ID == null || env.SECRET_APP_PRIVATE_KEY == null)
        run: exit 1

      - name: Get bot token
        id: get-bot-token
        if: env.SECRET_TOKEN == null
        uses: cluerise/actions/get-github-app-token@v4.1.0
        with:
          app-id: ${{ env.INPUT_APP_ID }}
          app-private-key: ${{ env.SECRET_APP_PRIVATE_KEY }}

      - name: Set initial state
        if: github.event.action == 'requested'
        run: |
          {
            echo "CI_STATE=pending"
            echo "CI_DESCRIPTION=In progress"
          } >> $GITHUB_ENV

      - name: Set success state
        if: github.event.action == 'completed' && github.event.workflow_run.conclusion == 'success'
        run: |
          {
            echo "CI_STATE=success"
            echo "CI_DESCRIPTION=Passed"
          } >> $GITHUB_ENV

      - name: Set failure state
        if: github.event.action == 'completed' && github.event.workflow_run.conclusion == 'failure'
        run: |
          {
            echo "CI_STATE=failure"
            echo "CI_DESCRIPTION=Failed"
          } >> $GITHUB_ENV

      - name: Send status
        uses: octokit/request-action@dad4362715b7fb2ddedf9772c8670824af564f0d
        with:
          route: POST /repos/{owner}/{repo}/statuses/{sha}
          owner: ${{ github.event.repository.owner.login }}
          repo: ${{ github.event.repository.name }}
          sha: ${{ github.event.workflow_run.head_sha }}
          context: Status / CI
          state: ${{ env.CI_STATE }}
          description: ${{ env.CI_DESCRIPTION }}
          target_url: ${{ github.event.workflow_run.html_url }}
          GITHUB_TOKEN: ${{ env.SECRET_TOKEN || steps.get-bot-token.outputs.token }}
